name: EC2 Instance Deploy and Model Execution

on:
  push:
    branches:
      - ingeneurie

jobs:
  terraform:
    name: Deploy EC2 instance using Terraform
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the code
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: terraform init -input=false
      working-directory: terraform/
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
        AWS_REGION: ${{ secrets.AWS_REGION }}

    - name: Terraform Apply and Capture EC2 IP
      id: apply
      run: |
        terraform apply -auto-approve

        # Récupérer l'ID de l'instance EC2
        INSTANCE_ID=$(terraform show -json | jq -r '.values.root_module.resources[] | select(.type == "aws_instance") | .values.id')
        echo "Instance ID: $INSTANCE_ID"

        # Utiliser AWS CLI pour obtenir l'adresse IP publique de l'instance EC2
        IP=$(aws ec2 describe-instances --instance-ids $INSTANCE_ID --query 'Reservations[0].Instances[0].PublicIpAddress' --output text)
        echo "EC2 Public IP: $IP"

        # Vérifier si l'adresse IP est vide
        if [[ -z "$IP" ]]; then
          echo "Erreur: L'adresse IP n'a pas pu être récupérée."
          exit 1
        fi

        # Sauvegarder l'IP dans un fichier et la télécharger sur S3
        echo "$IP" > ec2_ip.txt
        aws s3 cp ec2_ip.txt s3://backend-terraform-a23dsti-deep-learning-project/ingeneurie/ec2_ip.txt
      working-directory: terraform/
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
        SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
